# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kodec.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='kodec.proto',
  package='kodec',
  syntax='proto3',
  serialized_pb=_b('\n\x0bkodec.proto\x12\x05kodec\"\xbb\x02\n\x03\x43md\x12\x1b\n\x02tp\x18\x01 \x01(\x0e\x32\x0f.kodec.Cmd.Type\x12\n\n\x02\x63t\x18\x02 \x01(\x03\x12\t\n\x01\x64\x18\x03 \x01(\x0c\x12\x0b\n\x03txt\x18\x04 \x01(\t\x1a\x17\n\x04Ping\x12\x0f\n\x07groupId\x18\x01 \x01(\t\x1a\x18\n\x04Pong\x12\x10\n\x08userSize\x18\x01 \x01(\x03\x1a\x1e\n\x0cUnAuthorized\x12\x0e\n\x06reason\x18\x01 \x01(\t\x1a&\n\x04Kick\x12\x0e\n\x06userId\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x1a\x18\n\x06\x43losed\x12\x0e\n\x06reason\x18\x01 \x01(\t\"^\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0cUNAUTHORIZED\x10\x01\x12\x08\n\x04PING\x10\x02\x12\x08\n\x04PONG\x10\x03\x12\x08\n\x04KICK\x10\x04\x12\r\n\tLEAVEROOM\x10\x05\x12\n\n\x06\x43LOSED\x10\x06\"\x11\n\x03\x41\x63k\x12\n\n\x02id\x18\x01 \x01(\t\"^\n\x04\x46ree\x12\x1c\n\x02tp\x18\x01 \x01(\x0e\x32\x10.kodec.Free.Type\x12\n\n\x02\x63t\x18\x02 \x01(\x03\x12\t\n\x01\x64\x18\x03 \x01(\x0c\"!\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08LASERPEN\x10\x01\x62\x06proto3')
)



_CMD_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='kodec.Cmd.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNAUTHORIZED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PONG', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KICK', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEAVEROOM', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOSED', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=244,
  serialized_end=338,
)
_sym_db.RegisterEnumDescriptor(_CMD_TYPE)

_FREE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='kodec.Free.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LASERPEN', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=420,
  serialized_end=453,
)
_sym_db.RegisterEnumDescriptor(_FREE_TYPE)


_CMD_PING = _descriptor.Descriptor(
  name='Ping',
  full_name='kodec.Cmd.Ping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='groupId', full_name='kodec.Cmd.Ping.groupId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=118,
)

_CMD_PONG = _descriptor.Descriptor(
  name='Pong',
  full_name='kodec.Cmd.Pong',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='userSize', full_name='kodec.Cmd.Pong.userSize', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=144,
)

_CMD_UNAUTHORIZED = _descriptor.Descriptor(
  name='UnAuthorized',
  full_name='kodec.Cmd.UnAuthorized',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reason', full_name='kodec.Cmd.UnAuthorized.reason', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=176,
)

_CMD_KICK = _descriptor.Descriptor(
  name='Kick',
  full_name='kodec.Cmd.Kick',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='userId', full_name='kodec.Cmd.Kick.userId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reason', full_name='kodec.Cmd.Kick.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=216,
)

_CMD_CLOSED = _descriptor.Descriptor(
  name='Closed',
  full_name='kodec.Cmd.Closed',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reason', full_name='kodec.Cmd.Closed.reason', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=218,
  serialized_end=242,
)

_CMD = _descriptor.Descriptor(
  name='Cmd',
  full_name='kodec.Cmd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tp', full_name='kodec.Cmd.tp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ct', full_name='kodec.Cmd.ct', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='d', full_name='kodec.Cmd.d', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='txt', full_name='kodec.Cmd.txt', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CMD_PING, _CMD_PONG, _CMD_UNAUTHORIZED, _CMD_KICK, _CMD_CLOSED, ],
  enum_types=[
    _CMD_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=338,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='kodec.Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kodec.Ack.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=340,
  serialized_end=357,
)


_FREE = _descriptor.Descriptor(
  name='Free',
  full_name='kodec.Free',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tp', full_name='kodec.Free.tp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ct', full_name='kodec.Free.ct', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='d', full_name='kodec.Free.d', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FREE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=359,
  serialized_end=453,
)

_CMD_PING.containing_type = _CMD
_CMD_PONG.containing_type = _CMD
_CMD_UNAUTHORIZED.containing_type = _CMD
_CMD_KICK.containing_type = _CMD
_CMD_CLOSED.containing_type = _CMD
_CMD.fields_by_name['tp'].enum_type = _CMD_TYPE
_CMD_TYPE.containing_type = _CMD
_FREE.fields_by_name['tp'].enum_type = _FREE_TYPE
_FREE_TYPE.containing_type = _FREE
DESCRIPTOR.message_types_by_name['Cmd'] = _CMD
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
DESCRIPTOR.message_types_by_name['Free'] = _FREE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Cmd = _reflection.GeneratedProtocolMessageType('Cmd', (_message.Message,), dict(

  Ping = _reflection.GeneratedProtocolMessageType('Ping', (_message.Message,), dict(
    DESCRIPTOR = _CMD_PING,
    __module__ = 'kodec_pb2'
    # @@protoc_insertion_point(class_scope:kodec.Cmd.Ping)
    ))
  ,

  Pong = _reflection.GeneratedProtocolMessageType('Pong', (_message.Message,), dict(
    DESCRIPTOR = _CMD_PONG,
    __module__ = 'kodec_pb2'
    # @@protoc_insertion_point(class_scope:kodec.Cmd.Pong)
    ))
  ,

  UnAuthorized = _reflection.GeneratedProtocolMessageType('UnAuthorized', (_message.Message,), dict(
    DESCRIPTOR = _CMD_UNAUTHORIZED,
    __module__ = 'kodec_pb2'
    # @@protoc_insertion_point(class_scope:kodec.Cmd.UnAuthorized)
    ))
  ,

  Kick = _reflection.GeneratedProtocolMessageType('Kick', (_message.Message,), dict(
    DESCRIPTOR = _CMD_KICK,
    __module__ = 'kodec_pb2'
    # @@protoc_insertion_point(class_scope:kodec.Cmd.Kick)
    ))
  ,

  Closed = _reflection.GeneratedProtocolMessageType('Closed', (_message.Message,), dict(
    DESCRIPTOR = _CMD_CLOSED,
    __module__ = 'kodec_pb2'
    # @@protoc_insertion_point(class_scope:kodec.Cmd.Closed)
    ))
  ,
  DESCRIPTOR = _CMD,
  __module__ = 'kodec_pb2'
  # @@protoc_insertion_point(class_scope:kodec.Cmd)
  ))
_sym_db.RegisterMessage(Cmd)
_sym_db.RegisterMessage(Cmd.Ping)
_sym_db.RegisterMessage(Cmd.Pong)
_sym_db.RegisterMessage(Cmd.UnAuthorized)
_sym_db.RegisterMessage(Cmd.Kick)
_sym_db.RegisterMessage(Cmd.Closed)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'kodec_pb2'
  # @@protoc_insertion_point(class_scope:kodec.Ack)
  ))
_sym_db.RegisterMessage(Ack)

Free = _reflection.GeneratedProtocolMessageType('Free', (_message.Message,), dict(
  DESCRIPTOR = _FREE,
  __module__ = 'kodec_pb2'
  # @@protoc_insertion_point(class_scope:kodec.Free)
  ))
_sym_db.RegisterMessage(Free)


# @@protoc_insertion_point(module_scope)
